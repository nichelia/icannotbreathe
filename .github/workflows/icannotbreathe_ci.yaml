name: icannotbreathe CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  lint:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Configure environment
        shell: bash -l {0}
        run: ./scripts/helpers/environment.sh -f
      - name: Cache node npm
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: node-npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node-npm-${{ runner.os }}-
      - name: Lint
        shell: bash -l {0}
        run: cd blm && ng lint

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Configure environment
        shell: bash -l {0}
        run: ./scripts/helpers/environment.sh -f
      - name: Cache node npm
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: node-npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node-npm-${{ runner.os }}-
      - name: Test
        shell: bash -l {0}
        run: cd blm && ng test
      - name: Test coverage
        shell: bash -l {0}
        run: cd blm && ng test --no-watch --code-coverage
      - name: Upload coverage report to CodeCov
        uses: codecov/codecov-action@v1

  security-scan:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Build Docker test image
        shell: bash -l {0}
        run: ./scripts/build_docker_image.sh -t
      - name: Run security scan on Docker test image
        uses: anchore/scan-action@master
        with:
          image-reference: "nichelia/icannotbreathe:test"
          dockerfile-path: "./deployment/docker/prod.dockerfile"
          fail-build: true
          include-app-packages: true
      - name: Scan JSON results
        run: for j in `ls ./anchore-reports/*.json`; do echo "---- ${j} ----"; cat ${j}; echo; done
